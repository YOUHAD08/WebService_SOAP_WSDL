
package BankServicesProxy;

import java.util.List;
import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.Action;
import jakarta.xml.ws.RequestWrapper;
import jakarta.xml.ws.ResponseWrapper;


/**
 * This class was generated by the XML-WS Tools.
 * XML-WS Tools 4.0.3
 * Generated source version: 3.0
 * 
 */
@WebService(name = "BankService", targetNamespace = "http://SOAP/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface BankService {


    /**
     * 
     * @return
     *     returns java.util.List<BankServicesProxy.Account>
     */
    @WebMethod(operationName = "Get_Accounts")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Get_Accounts", targetNamespace = "http://SOAP/", className = "BankServicesProxy.GetAccounts")
    @ResponseWrapper(localName = "Get_AccountsResponse", targetNamespace = "http://SOAP/", className = "BankServicesProxy.GetAccountsResponse")
    @Action(input = "http://SOAP/BankService/Get_AccountsRequest", output = "http://SOAP/BankService/Get_AccountsResponse")
    public List<Account> getAccounts();

    /**
     * 
     * @param amount
     * @return
     *     returns double
     */
    @WebMethod(operationName = "ChangeEuroToDH")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ChangeEuroToDH", targetNamespace = "http://SOAP/", className = "BankServicesProxy.ChangeEuroToDH")
    @ResponseWrapper(localName = "ChangeEuroToDHResponse", targetNamespace = "http://SOAP/", className = "BankServicesProxy.ChangeEuroToDHResponse")
    @Action(input = "http://SOAP/BankService/ChangeEuroToDHRequest", output = "http://SOAP/BankService/ChangeEuroToDHResponse")
    public double changeEuroToDH(
        @WebParam(name = "amount", targetNamespace = "")
        double amount);

    /**
     * 
     * @param bankId
     * @return
     *     returns BankServicesProxy.Account
     */
    @WebMethod(operationName = "Get_Account")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Get_Account", targetNamespace = "http://SOAP/", className = "BankServicesProxy.GetAccount")
    @ResponseWrapper(localName = "Get_AccountResponse", targetNamespace = "http://SOAP/", className = "BankServicesProxy.GetAccountResponse")
    @Action(input = "http://SOAP/BankService/Get_AccountRequest", output = "http://SOAP/BankService/Get_AccountResponse")
    public Account getAccount(
        @WebParam(name = "BankId", targetNamespace = "")
        int bankId);

}
